#include <iostream>
#include <vector>

using namespace std;

bool isSafe(vector<int>& board, int row, int col) {
    for (int i = 0; i < row; ++i) {
        if (board[i] == col || abs(board[i] - col) == abs(i - row)) {
            return false;
        }
    }
    return true;
}

void printBoard(vector<int>& board) {
    int n = board.size();
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            if (board[i] == j) {
                cout << "Q ";
            } else {
                cout << ". ";
            }
        }
        cout << endl;
    }
    cout << endl;
}

void solveNQueensUtil(vector<int>& board, int row, int n, int& solutions) {
    if (row == n) {
        solutions++;
        cout << "Solution " << solutions << ":\n";
        printBoard(board);
        return;
    }

    for (int col = 0; col < n; ++col) {
        if (isSafe(board, row, col)) {
            board[row] = col;
            solveNQueensUtil(board, row + 1, n, solutions);
        }
    }
}

int solveNQueens(int n) {
    vector<int> board(n, -1);
    int solutions = 0;
    solveNQueensUtil(board, 0, n, solutions);
    return solutions;
}

int main() {
    int n;
    cout << "Enter the value of N: ";
    cin >> n;

    int solutions = solveNQueens(n);
    cout << "Number of solutions: " << solutions << endl;

    return 0;
}
