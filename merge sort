#include<iostream>
using namespace std;

class sort{
    public : int n,a[40];
    
    void merge_sort(int a[],int l,int r){
        if(l<r){
        int mid=(l+r)/2;
        merge_sort(a,l,mid);
        merge_sort(a,mid+1,r);
        merge(a,l,mid,r);
    }
}
    
    void merge(int a[],int l,int mid,int r ){
        int i=l,j=mid+1,k=l,b[40];
        
        while(i<=mid && j<=r){
            if(a[i] < a[j])
                b[k]=a[i++];
            else
                b[k]=a[j++];
            k=k+1;
        }
        
        if(i>mid){          //if 1st sub array is exhausted
            while(j<=r){
                b[k]=a[j++];
                k++;
            }
        }
        else{              //if 2nd sub array is exhausted
            while(i<=mid){
                b[k]=a[i++];
                k++;
            }
        }
        
        for(k=l;k<=r;k++)  //to copy elements of b array to a
         a[k]=b[k];
    }
}t;

int main(){
    int i;
    cout<<"\nEnter the number of elements: ";
    cin>>t.n;
    cout<<"\nEnter "<<t.n<<" elements: ";
    for(i=0;i<t.n;i++)
     cin>>t.a[i];
    t.merge_sort(t.a,0,t.n-1);        //pass the array , initially left index is 0 while right is n-1
    cout<<"\nSorted array is: ";
    for(i=0;i<t.n;i++)
     cout<<t.a[i]<<" ";
}
            
